7_if
--- your output:(result/7_if)
+++ answer:(./basic_cases/sample_solutions/7_if)
@@ -1 +1,25 @@
-Segmentation fault (core dumped)
+program <line: 4, col: 1> IfControl void
+  compound statement <line: 8, col: 1>
+    declaration <line: 9, col: 3>
+      variable <line: 9, col: 7> debug boolean
+    if statement <line: 12, col: 3>
+      binary operator <line: 12, col: 9> >
+        constant <line: 12, col: 7> 1
+        constant <line: 12, col: 11> 0
+      compound statement <line: 13, col: 3>
+        print statement <line: 14, col: 5>
+          constant <line: 14, col: 11> true
+      compound statement <line: 17, col: 3>
+        print statement <line: 18, col: 5>
+          constant <line: 18, col: 11> false
+    if statement <line: 22, col: 3>
+      binary operator <line: 22, col: 12> =
+        variable reference <line: 22, col: 6> debug
+        constant <line: 22, col: 14> true
+      compound statement <line: 23, col: 3>
+        print statement <line: 24, col: 5>
+          constant <line: 24, col: 11> [LOG]\n
+
+|--------------------------------|
+|  There is no syntactic error!  |
+|--------------------------------|

8_while
--- your output:(result/8_while)
+++ answer:(./basic_cases/sample_solutions/8_while)
@@ -1 +1,21 @@
-Segmentation fault (core dumped)
+program <line: 4, col: 1> WhileControl void
+  compound statement <line: 8, col: 1>
+    declaration <line: 9, col: 3>
+      variable <line: 9, col: 7> counter integer
+        constant <line: 9, col: 16> 0
+    while statement <line: 12, col: 3>
+      binary operator <line: 12, col: 17> <
+        variable reference <line: 12, col: 9> counter
+        constant <line: 12, col: 19> 10
+      compound statement <line: 13, col: 3>
+        print statement <line: 14, col: 5>
+          constant <line: 14, col: 11> Taiwan No.1\n
+        assignment statement <line: 15, col: 13>
+          variable reference <line: 15, col: 5> counter
+          binary operator <line: 15, col: 24> +
+            variable reference <line: 15, col: 16> counter
+            constant <line: 15, col: 26> 1
+
+|--------------------------------|
+|  There is no syntactic error!  |
+|--------------------------------|

9_for
--- your output:(result/9_for)
+++ answer:(./basic_cases/sample_solutions/9_for)
@@ -1 +1,16 @@
-Segmentation fault (core dumped)
+program <line: 4, col: 1> ForControl void
+  compound statement <line: 8, col: 1>
+    for statement <line: 11, col: 3>
+      declaration <line: 11, col: 7>
+        variable <line: 11, col: 7> idx integer
+      assignment statement <line: 11, col: 11>
+        variable reference <line: 11, col: 7> idx
+        constant <line: 11, col: 14> 0
+      constant <line: 11, col: 19> 10
+      compound statement <line: 12, col: 3>
+        print statement <line: 13, col: 5>
+          constant <line: 13, col: 11> ISA (Ideology State Automaton)\n
+
+|--------------------------------|
+|  There is no syntactic error!  |
+|--------------------------------|

10_return
--- your output:(result/10_return)
+++ answer:(./basic_cases/sample_solutions/10_return)
@@ -1 +1,8 @@
-Segmentation fault (core dumped)
+program <line: 4, col: 1> ret void
+  compound statement <line: 8, col: 1>
+    return statement <line: 9, col: 3>
+      constant <line: 9, col: 10> 0
+
+|--------------------------------|
+|  There is no syntactic error!  |
+|--------------------------------|

11_call
--- your output:(result/11_call)
+++ answer:(./basic_cases/sample_solutions/11_call)
@@ -1 +1,26 @@
-Segmentation fault (core dumped)
+program <line: 4, col: 1> call void
+  function declaration <line: 8, col: 1> func integer (integer, integer)
+    declaration <line: 8, col: 6>
+      variable <line: 8, col: 6> a integer
+      variable <line: 8, col: 9> b integer
+    compound statement <line: 9, col: 1>
+      if statement <line: 10, col: 3>
+        binary operator <line: 10, col: 8> <
+          variable reference <line: 10, col: 6> a
+          variable reference <line: 10, col: 10> b
+        compound statement <line: 11, col: 3>
+          print statement <line: 12, col: 5>
+            constant <line: 12, col: 11> 55146
+        compound statement <line: 15, col: 3>
+          print statement <line: 16, col: 5>
+            constant <line: 16, col: 11> 22146
+  compound statement <line: 22, col: 1>
+    function invocation <line: 23, col: 3> func
+      constant <line: 23, col: 8> 20
+      constant <line: 23, col: 12> 30
+    print statement <line: 24, col: 3>
+      function invocation <line: 24, col: 9> func
+
+|--------------------------------|
+|  There is no syntactic error!  |
+|--------------------------------|

